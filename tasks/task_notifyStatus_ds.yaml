apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: notify-status-ds-27
spec:
  params:
    - name: pipelineRunID
      default: ""
      description: The id of the pipeline run
      type: string
    - name: downstream
      default: ""
      description: The DOWNSTREAM Tag used to deploy the catalogsources
      type: string
    - name: downstreamStatus
      default: ""
      description: Status of the downstream run. If failed, upgrade will not run
      type: string
    - name: sendNotification
      default: "false"
      description: Sends notification to slack if value is true
      type: string
  steps:
    - args:
        - |-
          #!/bin/bash
          set -e
          {
          REASON=$(cat failureStatus.yaml)

          PR_LINK=https://console-openshift-console.apps.collective.aws.red-chesterfield.com/k8s/ns/hypershift-devel/tekton.dev~v1beta1~PipelineRun/$(inputs.params.pipelineRunID)

          STATUS_EMOJI=:failed:

          if [ $(inputs.params.downstreamStatus) == "Succeeded" ]; 
          then 
            STATUS_EMOJI=:done-circle-check: ; 
            STATUS_MESSAGE="Succeeded"
          else
            STATUS_MESSAGE=$(echo "Failed:" $REASON) 
          fi


          MESSAGE=":downstream: Daily ACM Hypershift Downstream Test :downstream:\nACM Build: \`$(inputs.params.downstream)\` \nOCP Version: \`4.12.14\` \nStatus: $STATUS_MESSAGE $STATUS_EMOJI \nPipeline Run: $PR_LINK"

          if [[ "$(inputs.params.sendNotification)" == "true" ]]; then
            echo "Send notification to acm-hypershift-notifications slack channel"
            echo "Message: "$MESSAGE
            echo "\n"
            curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" $SLACK_WEBHOOK
          else
            echo "Skip notification to slack channel"
          fi

          exit 0
          } 2>&1 | tee task_logs/$(context.task.name).log

      command:
        - /bin/bash
        - -c
      env:
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: slack-webhook
              key: webhook
      image: quay.io/zkayyali812/ocm-utils:latest
      name: apply
      resources: {}
      workingDir: /workspace/source
  workspaces:
    - name: source
